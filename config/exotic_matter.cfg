# Configuration file

general {

    ##########################################################################################################
    # execution
    #--------------------------------------------------------------------------------------------------------#
    # General settings for game logic execution.
    ##########################################################################################################

    execution {
        # Maximum number of queued 'operations' to be executed each server tick.
        #  Operations are submitted by game logic that runs outside the main server thread.
        #  The size of each operation varies, and some tasks consume more than one op. 
        #  Try smaller values if seeing tick lag on the server. Some game actions or events may take 
        #  longer to complete with small values.  Could have indirect effects on client if results in
        #  large numbers of block update, for example.
        # Min: 128
        # Max: 1000000
        I:maxQueuedWorldOperationsPerTick=4096
    }

    ##########################################################################################################
    # blocks
    #--------------------------------------------------------------------------------------------------------#
    # Settings for blocks.
    ##########################################################################################################

    blocks {
        # Approximate maximum number of procedurally generated collision boxes for blocks that use then.
        #  This is the budget for *optimal* boxes, which are generated in a separate-low priority thread.
        #  This means there isn't much penalty for using more detailed collision boxes and allowing more 
        #  detailed boxes can result in more accurate view tracing and projectile/entity collisions.
        #  It is made configurable in case some future physics mod does collision processing and has 
        #  performance issues with the larger numbers.  Smaller number are still pretty good. The generator
        #  logic finds the best possible set of collision boxes (with 1/8 resolution) with the given budget.
        # 
        # Very little (no) testing has been done with non-default values.  It is therefore STRONGLY recommended
        # to leave this value as-is unless you have a specific and worthwhile reason to change it.
        # Min: 4
        # Max: 64
        I:collisionBoxBudget=8

        # Set true to enable tracing output for block model state.  Can spam the log quite a bit, so leave false unless having problems.
        B:debugModelState=false

        # If true, terrain block quads will be randomly recolored to show tesselation.
        #  Will only be apparent if block model hasn't already been constructed/cached.
        #  May also require a chunk rebuild. Only use is for debug and testing.
        B:enableTerrainQuadDebugRender=false

        # Maximum number of block states checked before placing virtual blocks.
        #  Try smaller values if placing large multi-block regions is causing FPS problems.
        #  With smaller values, species (connected textures) may not be selected properly 
        #  for large multi-block placements.
        # Min: 16
        # Max: 4096
        I:maxPlacementCheckCount=512

        # Controls how much detail should be shown if The One Probe is enabled.
        # Valid values:
        # BASIC
        # EXTRA
        # DEBUG
        S:probeInfoLevel=BASIC

        # Allow user selection of hidden textures in SuperModel Block GUI. Generally only useful for testing.
        B:showHiddenTextures=false

        # If true, terrain block models will be generated with fewer quads for relatively flat regions.
        #  Reduces memory consumption and may improve render performance but may also result in minor visual defects.
        B:simplifyTerrainBlockGeometry=true
    }

    ##########################################################################################################
    # render
    #--------------------------------------------------------------------------------------------------------#
    # Settings for visual appearance.
    ##########################################################################################################

    render {
        # Seconds between output of client-side performance statistics to log, if any are enabled.
        # Min: 10
        # Max: 600
        I:clientStatReportingInterval=10

        # Debug Feature: collision boxes drown without depth, colorized and inset. Used for seeing collision box generation problems.
        B:debugCollisionBoxes=false

        # Debug Feature: draw block boundaries for non-cubic blocks.
        B:debugDrawBlockBoundariesForNonCubicBlocks=false

        # Debug feature: draw quad outlines and vertex normals for the block currently being looked at.
        B:debugDrawQuadsOutlinesAndNormals=false

        # Debug Feature: output generated color atlas in config folder to show possible hues.
        B:debugOutputColorAtlas=false

        # Enable in-memroy texture compression of animated textures if your graphics card supports is.
        # Can reduce memory usage by 1GB or more.
        B:enableAnimatedTextureCompression=false

        # Enable animated textures. Set false if animation may be causing memory or performance problems.
        B:enableAnimatedTextures=false

        # Collect statistics on texture animation. Used for testing.
        B:enableAnimationStatistics=false

        # If true, Dynamic flow block (volcanic lava and basalt) will not render faces occulded by adjacent flow blocks.
        #  True is harder on CPU and easier on your graphics card/chip.  Experiment if you have FPS problems.
        #  Probably won't matter on systems with both a fast CPU and fast graphics.
        B:enableFaceCullingOnFlowBlocks=true

        # Collect statistics on quad caching. Used for testing.
        B:enableQuadCacheStatistics=false

        # Debug Feature: output generated font images that are uploaded to texture map.
        B:outputFontTexturesForDebugging=false

        # Rendering for blocks about to be placed.
        # Valid values:
        # NONE
        # OUTLINE
        S:previewSetting=OUTLINE

        # Maxiumum number of quads held in cache for reuse. Higher numbers may result is less memory consuption overall, up to a point.
        # Min: 65535
        # Max: 1048575
        I:quadCacheSizeLimit=524280
    }

    ##########################################################################################################
    # hyperstone
    #--------------------------------------------------------------------------------------------------------#
    # Settings for hyperdimensional building materials.
    ##########################################################################################################

    hyperstone {
        # If false, normal fires directly above hyper-dimensional blocks are immediately extinguished.
        B:allowFire=false

        # If false, players cannot harvest hyper-dimensional blocks without silk touch - they can be broken but drop rubble.
        B:allowHarvest=false

        # If false, mobs cannot spawn on hyper-dimensional blocks in darkness; similar to slabs.
        B:allowMobSpawning=false

        # If true, hyper-dimensional blocks can be harvested intact with silk touch. Only matters if allowHarvest is true.
        B:allowSilkTouch=true

        # If true, hyper-dimensional blocks have a chance to lose durability due to damage from entities or explosions.
        B:canBeDamaged=false
    }

}


